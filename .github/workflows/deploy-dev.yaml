name: DEV Deploy

on:
  workflow_dispatch:

env:
  PROJECT_ID: atsea-dev
  PROJECT_NUMBER: 289816281242
  ENV: dev
  FUNCTION_NAME: atsea-substream
  REGION: us-central1
  GAR_LOCATION: us-central1-docker.pkg.dev/atsea-dev/atsea-substream-images-repo

jobs:
  build-push-artifact:
    runs-on: ubuntu-latest
    timeout-minutes: 90
    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
      # Step 1: Checkout code
      - name: "Checkout"
        uses: "actions/checkout@v3"

      # Step 2: Authenticate with GCP using workload identity
      - id: auth
        uses: google-github-actions/auth@v1
        with:
          token_format: 'access_token'
          create_credentials_file: true
          workload_identity_provider: "projects/${{ env.PROJECT_NUMBER }}/locations/global/workloadIdentityPools/atsea-github-pool/providers/atsea-github-pool-provider"
          service_account: "atsea-github-pool@${{ env.PROJECT_ID }}.iam.gserviceaccount.com"
          access_token_lifetime: '100s'

      # Step 3: Install & configure the gcloud CLI
      - name: "Set up Cloud SDK"
        uses: "google-github-actions/setup-gcloud@v1"
        with:
          project_id: ${{ env.PROJECT_ID }}
          region: ${{ env.REGION }}

      - name: "Use gcloud CLI"
        run: "gcloud info"

      # Step 4: Docker Auth to push to Artifact Registry
      - name: "Docker auth"
        run: |
          gcloud auth configure-docker ${{ env.REGION }}-docker.pkg.dev --quiet

      # Step 5: Install Rust with wasm target
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: wasm32-unknown-unknown

      # Step 6: Build your Substreams WASM artifact
      - name: Cargo build (Substreams wasm)
        run: |
          cargo build --target wasm32-unknown-unknown --release
          ls -lh target/wasm32-unknown-unknown/release/substreams.wasm

      # Step 7: Build the Docker image
      - name: Build image
        run: |
          docker build \
            . \
            --file Dockerfile \
            --tag ${{ env.GAR_LOCATION }}/${{ env.FUNCTION_NAME }}:$(echo ${{ github.sha }} | cut -c 1-7)

      # Step 8: Push the Docker image
      - name: Push image
        run: |
          docker push ${{ env.GAR_LOCATION }}/${{ env.FUNCTION_NAME }}:$(echo ${{ github.sha }} | cut -c 1-7)

      # Step 9: Deploy to Cloud Run
      - name: Deploy ${{ env.FUNCTION_NAME }}
        run: |
          gcloud run deploy ${{ env.FUNCTION_NAME }} \
            --image ${{ env.GAR_LOCATION }}/${{ env.FUNCTION_NAME }}:$(echo ${{ github.sha }} | cut -c 1-7) \
            --platform managed \
            --region=${{ env.REGION }} \
            --service-account=atsea-github-pool@${{ env.PROJECT_ID }}.iam.gserviceaccount.com \
            --set-env-vars=PROJECT_ID=${{ env.PROJECT_ID }} \
            --set-env-vars=FUNCTION_NAME=${{ env.FUNCTION_NAME }} \
            --set-env-vars=ENV=${{ env.ENV }}
